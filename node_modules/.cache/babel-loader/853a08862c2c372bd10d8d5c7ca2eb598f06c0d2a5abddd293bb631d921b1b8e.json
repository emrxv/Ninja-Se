{"ast":null,"code":"var _jsxFileName = \"/Users/emresunar/Documents/CS3733/IProj/starter/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport ninjase from './ninjase.svg';\nimport Model from './model/Model.js';\nimport { redrawCanvas } from './boundary/Boundary.js';\nimport { layout } from './Layout.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  // initial instantiation of the Model\n  const [model, setModel] = React.useState(new Model(0)); // only place where Model object is instantiated.\n  const [redraw, forceRedraw] = React.useState(0); // change values to force redraw\n\n  const appRef = React.useRef(null); // Later need to be able to refer to App \n  const canvasRef = React.useRef(null); // Later need to be able to refer to Canvas\n\n  /** Ensures initial rendering is performed, and that whenever model changes, it is re-rendered. */\n  React.useEffect(() => {\n    /** Happens once. */\n    redrawCanvas(model, canvasRef.current, appRef.current);\n  }, [model, redraw]); // this second argument is CRITICAL, since it declares when to refresh (whenever Model changes)\n\n  const ChangeConfig = config => {\n    _s();\n    const [model, setModel] = React.useState(new Model(config));\n  };\n\n  // controller to handle moving\n  _s(ChangeConfig, \"yzrCGQkc9lDpk2Nw9vvn4pNWkmk=\");\n  const moveNinjaSe = direction => {\n    const ninjaSeSize = 2;\n    let ninjaSePosition = null;\n    for (let r = 0; r < model.board.grid.length; r++) {\n      for (let c = 0; c < model.board.grid[r].length; c++) {\n        if (model.board.grid[r][c].color === 'green') {\n          if (r + 1 < model.board.grid.length && c + 1 < model.board.grid[r].length && model.board.grid[r + 1][c].color === 'green' && model.board.grid[r][c + 1].color === 'green') {\n            ninjaSePosition = {\n              row: r,\n              col: c\n            };\n            break;\n          }\n        }\n      }\n      if (ninjaSePosition) break;\n    }\n    if (!ninjaSePosition) {\n      return;\n    }\n    switch (direction) {\n      case \"Up\":\n        if (ninjaSePosition.row > 0) {\n          for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n            for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n              model.board.grid[r][c].color = 'white';\n            }\n          }\n          ninjaSePosition.row--;\n          for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n            for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n              model.board.grid[r][c].color = 'green';\n            }\n          }\n          forceRedraw(redraw + 1);\n        }\n        break;\n      case \"Right\":\n        if (ninjaSePosition.col + ninjaSeSize < model.board.grid[0].length) {\n          for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n            for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n              model.board.grid[r][c].color = 'white';\n            }\n          }\n          ninjaSePosition.col++;\n          for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n            for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n              model.board.grid[r][c].color = 'green';\n            }\n          }\n          forceRedraw(redraw + 1);\n        }\n        break;\n      case \"Down\":\n        if (ninjaSePosition.row + ninjaSeSize < model.board.grid.length) {\n          for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n            for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n              model.board.grid[r][c].color = 'white';\n            }\n          }\n          ninjaSePosition.row++;\n          for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n            for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n              model.board.grid[r][c].color = 'green';\n            }\n          }\n          forceRedraw(redraw + 1);\n        }\n        break;\n      case \"Left\":\n        if (ninjaSePosition.col > 0) {\n          for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n            for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n              model.board.grid[r][c].color = 'white';\n            }\n          }\n          ninjaSePosition.col--;\n          for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n            for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n              model.board.grid[r][c].color = 'green';\n            }\n          }\n          forceRedraw(redraw + 1);\n        }\n        break;\n    }\n\n    // model.board.grid[1][3].color = 'red'\n    //forceRedraw(redraw+1)   // react to changes, if model has changed.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    ref: appRef,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      tabIndex: \"1\",\n      \"data-testid\": \"canvas\",\n      className: \"App-canvas\",\n      ref: canvasRef,\n      width: 500,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"ninjase\",\n      src: ninjase,\n      alt: \"hidden\",\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: layout.scaling,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        \"data-testid\": \"moves-label\",\n        style: layout.text,\n        children: \"number moves: \" + model.numMoves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Config1\",\n        \"data-testid\": \"Config1\",\n        style: layout.Config1,\n        onClick: e => ChangeConfig(0),\n        children: \"Config 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Config2\",\n        \"data-testid\": \"Config2\",\n        style: layout.Config2,\n        onClick: e => ChangeConfig(1),\n        children: \"Config 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Config3\",\n        \"data-testid\": \"Config3\",\n        style: layout.Config3,\n        onClick: e => ChangeConfig(2),\n        children: \"Config 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: layout.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upbutton\",\n          \"data-testid\": \"upbutton\",\n          style: layout.upbutton,\n          onClick: e => moveNinjaSe(\"Up\"),\n          children: \"UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"leftbutton\",\n          \"data-testid\": \"leftbutton\",\n          style: layout.leftbutton,\n          onClick: e => moveNinjaSe(\"Left\"),\n          children: \"LEFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rightbutton\",\n          \"data-testid\": \"rightbutton\",\n          style: layout.rightbutton,\n          onClick: e => moveNinjaSe(\"Right\"),\n          children: \"RIGHT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"downbutton\",\n          \"data-testid\": \"downbutton\",\n          style: layout.downbutton,\n          onClick: e => moveNinjaSe(\"Down\"),\n          children: \"DOWN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"hjqSLNayM3DeZaL/BO+A2eMkUtY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ninjase","Model","redrawCanvas","layout","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","model","setModel","useState","redraw","forceRedraw","appRef","useRef","canvasRef","useEffect","current","ChangeConfig","config","moveNinjaSe","direction","ninjaSeSize","ninjaSePosition","r","board","grid","length","c","color","row","col","className","ref","children","tabIndex","width","height","fileName","_jsxFileName","lineNumber","columnNumber","id","src","alt","hidden","style","scaling","text","numMoves","Config1","onClick","e","Config2","Config3","buttons","upbutton","leftbutton","rightbutton","downbutton","_c","$RefreshReg$"],"sources":["/Users/emresunar/Documents/CS3733/IProj/starter/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport ninjase from './ninjase.svg'\nimport Model from './model/Model.js';\nimport { redrawCanvas } from './boundary/Boundary.js'\nimport {layout} from './Layout.js'\n\nfunction App() {\n  // initial instantiation of the Model\n  const [model, setModel] = React.useState(new Model(0));  // only place where Model object is instantiated.\n  const [redraw, forceRedraw] = React.useState(0);    // change values to force redraw\n\n  const appRef = React.useRef(null);      // Later need to be able to refer to App \n  const canvasRef = React.useRef(null);   // Later need to be able to refer to Canvas\n\n  /** Ensures initial rendering is performed, and that whenever model changes, it is re-rendered. */\n  React.useEffect (() => {\n    \n    /** Happens once. */\n    redrawCanvas(model, canvasRef.current, appRef.current);\n  }, [model, redraw])   // this second argument is CRITICAL, since it declares when to refresh (whenever Model changes)\n\n  const ChangeConfig = (config) => {\n    const [model, setModel] = React.useState(new Model(config));    \n    }\n    \n  // controller to handle moving\n  const moveNinjaSe = (direction) => {\n\n    const ninjaSeSize = 2; \n\n    let ninjaSePosition = null;\n    for (let r = 0; r < model.board.grid.length; r++) {\n        for (let c = 0; c < model.board.grid[r].length; c++) {\n            if (model.board.grid[r][c].color === 'green') {\n                if (\n                    r + 1 < model.board.grid.length &&\n                    c + 1 < model.board.grid[r].length &&\n                    model.board.grid[r + 1][c].color === 'green' &&\n                    model.board.grid[r][c + 1].color === 'green'\n                ) {\n                    ninjaSePosition = { row: r, col: c };\n                    break;\n                }\n            }\n        }\n        if (ninjaSePosition) break;\n    }\n\n    if (!ninjaSePosition) {\n        return;\n    }\n\n    switch (direction) {\n        case \"Up\":\n            if (ninjaSePosition.row > 0) {\n                for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n                    for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n                        model.board.grid[r][c].color = 'white'\n                    }\n                }\n                ninjaSePosition.row--;\n                for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n                    for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n                        model.board.grid[r][c].color = 'green'\n                    }\n                }\n                forceRedraw(redraw + 1)\n            }\n            break;\n        case \"Right\":\n          if (ninjaSePosition.col + ninjaSeSize < model.board.grid[0].length) {\n\n            for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n                for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n                    model.board.grid[r][c].color = 'white'; \n                }\n            }\n\n            ninjaSePosition.col++;\n\n            for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n                for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n                    model.board.grid[r][c].color = 'green';\n                }\n            }\n            forceRedraw(redraw + 1);\n        }\n            break;\n        case \"Down\":\n          if (ninjaSePosition.row + ninjaSeSize < model.board.grid.length) {\n\n            for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n                for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n                    model.board.grid[r][c].color = 'white'; \n                }\n            }\n\n            ninjaSePosition.row++;\n\n            for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n                for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n                    model.board.grid[r][c].color = 'green';\n                }\n            }\n            forceRedraw(redraw + 1);\n        }\n            break;\n        case \"Left\":\n          if (ninjaSePosition.col > 0) {\n\n            for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n                for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n                    model.board.grid[r][c].color = 'white'; \n                }\n            }\n\n            ninjaSePosition.col--;\n\n            for (let r = ninjaSePosition.row; r < ninjaSePosition.row + ninjaSeSize; r++) {\n                for (let c = ninjaSePosition.col; c < ninjaSePosition.col + ninjaSeSize; c++) {\n                    model.board.grid[r][c].color = 'green';\n                }\n            }\n            forceRedraw(redraw + 1);\n        }\n            break;\n    }\n\n   // model.board.grid[1][3].color = 'red'\n   //forceRedraw(redraw+1)   // react to changes, if model has changed.\n  }\n\n  return (\n    <div className=\"App\" ref={appRef}>\n      <canvas tabIndex=\"1\"  \n        data-testid=\"canvas\"\n        className=\"App-canvas\"\n        ref={canvasRef}\n        width={500}\n        height={500}\n        />\n      \n       <img id=\"ninjase\" src={ninjase} alt=\"hidden\" hidden></img>\n\n\n      \n        <div style = {layout.scaling}>\n        <label data-testid=\"moves-label\" style={layout.text}>{\"number moves: \" + model.numMoves}</label>\n           <button className=\"Config1\" data-testid=\"Config1\" style={layout.Config1}   onClick={(e) => ChangeConfig(0)}   >Config 1</button>\n           <button className=\"Config2\" data-testid=\"Config2\" style={layout.Config2}  onClick={(e) => ChangeConfig(1)}  >Config 2</button>\n           <button className=\"Config3\" data-testid=\"Config3\" style={layout.Config3}   onClick={(e) => ChangeConfig(2)}   >Config 3</button>\n        <div style={layout.buttons}>\n           <button className=\"upbutton\" data-testid=\"upbutton\" style={layout.upbutton}     onClick={(e) => moveNinjaSe(\"Up\")}       >UP</button>\n           <button className=\"leftbutton\" data-testid=\"leftbutton\" style={layout.leftbutton}   onClick={(e) => moveNinjaSe(\"Left\")}   >LEFT</button>\n           <button className=\"rightbutton\" data-testid=\"rightbutton\" style={layout.rightbutton}  onClick={(e) => moveNinjaSe(\"Right\")}  >RIGHT</button>\n           <button className=\"downbutton\" data-testid=\"downbutton\" style={layout.downbutton}   onClick={(e) => moveNinjaSe(\"Down\")}   >DOWN</button>\n        </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}